<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ title or "modsuav" }}</title>
    <link href="/style.css" rel="stylesheet" />
  </head>

  <body class="min-h-screen flex flex-col bg-backdrop text-whisper font-sans antialiased">

    <!-- ‚ú∂ LOADER -->
    <div id="loader" class="fixed inset-0 z-50 bg-backdrop text-whisper flex flex-col items-center justify-center text-sm font-mono transition-opacity duration-1000 space-y-1 tracking-tight">
      <div class="text-suav animate-pulse">‚ú∂ <span id="dot-sequence">.</span></div>
      <div id="loader-message" class="opacity-70">initializing modsuav console</div>
    </div>

    <!-- ‚ú∂ AUDIO -->
    <audio id="boot-sound" preload="auto">
      <source src="/intro.mp3" type="audio/mpeg" />
    </audio>

    <!-- ‚ú∂ DESKTOP NAV -->
    {% include "nav.njk" %}

    <!-- ‚ú∂ DESKTOP 50VH DROPDOWN -->
<div
  id="freedomPanelDesktop"
  class="hidden fixed top-14 left-0 w-full h-[50vh] bg-[#0a0a0a] border-t border-neutral-800
         text-whisper font-mono text-sm z-40 transition-all duration-300 ease-in-out"
>
      <div class="max-w-6xl mx-auto px-8 py-8 flex flex-col md:flex-row justify-between gap-8">
        <div class="space-y-3 max-w-xl">
          <h2 class="text-xl font-bold text-suav">SUAV Console Labs</h2>
          <p class="opacity-80 leading-snug">
            Soul-coded tools for artists and studios. No roadmap. Just resonance.
          </p>
          <p class="text-xs text-neutral-500">Everything here hums quietly until called.</p>
        </div>
        <div class="space-y-2">
          <a href="/freebies" class="block hover:text-suav transition">Freebies ‚ú∂</a>
          <a href="/branches" class="block hover:text-suav transition">Branches</a>
          <a href="/docs" class="block hover:text-suav transition">Docs</a>
        </div>
      </div>
    </div>

    <!-- ‚ú∂ MOBILE NAV OVERLAY -->
    <div id="navOverlay"
      class="hidden fixed inset-0 bg-[#0a0a0a] text-whisper z-50 px-6 py-8 space-y-6 text-lg overflow-y-auto md:hidden"
    >
      <a href="/" class="block">In√≠cio</a>
      <button id="freedomToggleMobile" class="flex items-center gap-1 w-full text-left">
        Freedom34
        <svg id="freedomChevronMobile" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
        </svg>
      </button>
      <div id="freedomPanelMobile" class="hidden pl-4 border-l border-neutral-700 space-y-2 pt-2">
        <a href="/freebies" class="block text-base text-suav">‚ú∂ Freebies</a>
        <a href="/branches" class="block text-base">Branches</a>
        <a href="/docs" class="block text-base">Docs</a>
      </div>
      <a href="/creative" class="block">Creative</a>
      <a href="/philosophy" class="block">Philosophy</a>
      <a href="/contact" class="block">Contact</a>
    </div>

    <!-- ‚ú∂ CLICK MESSAGE -->
    <p id="click-message" class="text-xs text-center text-suav/60 mt-4 opacity-0 transition-opacity duration-500">
      ‚ú∂ connection verified
    </p>

    <!-- ‚ú∂ MAIN SLOT -->
    <main class="flex-1">
      {{ content | safe }}
    </main>

    <!-- ‚ú∂ FOOTER -->
    {% include "footer.njk" %}

    <!-- ‚ú∂ CONSOLE SCRIPT -->
    <script>
      // LOADER SEQUENCE
      const messages = [
        "initializing modsuav console",
        "linking to grove tree",
        "calibrating soul-interface",
        "establishing frequency sync",
        "syncing encrypted memory",
        "‚ú∂ ready"
      ];
      const bootSound = document.getElementById("boot-sound");
      bootSound?.play().catch(err => console.log("Autoplay blocked", err));
      let hasUserClicked = false;
      window.addEventListener("click", () => {
        if (hasUserClicked) return;
        hasUserClicked = true;
        bootSound?.play().catch(err => console.warn("Manual playback failed:", err));
        const clickMessage = document.getElementById("click-message");
        clickMessage?.classList.remove("opacity-0");
        clickMessage?.classList.add("opacity-100");
        setTimeout(() => {
          clickMessage?.classList.remove("opacity-100");
          clickMessage?.classList.add("opacity-0");
        }, 3500);
      }, { once: true });
      if (!sessionStorage.getItem("modsuavLoaded")) {
        sessionStorage.setItem("modsuavLoaded", "true");
        let messageIndex = 0;
        const loaderMessage = document.getElementById("loader-message");
        const dotSequence = document.getElementById("dot-sequence");
        const dots = [".", "..", "..."];
        let dotState = 0;
        const dotTimer = setInterval(() => {
          dotState = (dotState + 1) % dots.length;
          dotSequence.textContent = dots[dotState];
        }, 300);
        const messageDelay = 500;
        const messageTimer = setInterval(() => {
          messageIndex++;
          if (messageIndex >= messages.length) {
            clearInterval(messageTimer);
            clearInterval(dotTimer);
            return;
          }
          loaderMessage.textContent = messages[messageIndex];
        }, messageDelay);
        setTimeout(() => {
          const loader = document.getElementById("loader");
          loader?.classList.add("opacity-0");
          setTimeout(() => loader?.remove(), 600);
        }, messageDelay * (messages.length + 1));
      } else {
        document.getElementById("loader")?.remove();
      }
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        // üçî Mobile toggle
        const menuToggle = document.getElementById("menuToggle");
        const navOverlay = document.getElementById("navOverlay");

        menuToggle?.addEventListener("click", () => {
          const isOpen = navOverlay.classList.toggle("hidden");
          document.body.style.overflow = isOpen ? "" : "hidden";
        });

        // ‚ú∂ Mobile Freedom34 flyout
        const freedomToggleMobile = document.getElementById("freedomToggleMobile");
        const freedomPanelMobile = document.getElementById("freedomPanelMobile");
        const freedomChevronMobile = document.getElementById("freedomChevronMobile");

        freedomToggleMobile?.addEventListener("click", () => {
          const open = freedomPanelMobile.classList.toggle("hidden");
          freedomChevronMobile?.classList.toggle("rotate-180", open);
        });

        // ‚ú∂ Desktop Freedom34 flyout
        const freedomToggleDesktop = document.getElementById("freedomToggleDesktop");
        const freedomPanelDesktop = document.getElementById("freedomPanelDesktop");
        const freedomChevronDesktop = document.getElementById("freedomChevronDesktop");

        freedomToggleDesktop?.addEventListener("click", (e) => {
          e.stopPropagation();
          const open = freedomPanelDesktop.classList.toggle("hidden");
          freedomChevronDesktop?.classList.toggle("rotate-180", open);
        });

        // Click outside closes desktop flyout
        document.addEventListener("click", (e) => {
          const isDesktop = window.innerWidth >= 768;
          if (
            isDesktop &&
            freedomPanelDesktop &&
            !freedomPanelDesktop.classList.contains("hidden") &&
            !freedomPanelDesktop.contains(e.target) &&
            !freedomToggleDesktop.contains(e.target)
          ) {
            freedomPanelDesktop.classList.add("hidden");
            freedomChevronDesktop?.classList.remove("rotate-180");
          }
        });

        // ‚éã ESC closes all
        document.addEventListener("keydown", (e) => {
          if (e.key === "Escape") {
            navOverlay?.classList.add("hidden");
            document.body.style.overflow = "";
            freedomPanelMobile?.classList.add("hidden");
            freedomChevronMobile?.classList.remove("rotate-180");
            freedomPanelDesktop?.classList.add("hidden");
            freedomChevronDesktop?.classList.remove("rotate-180");
          }
        });

        // üßπ Mobile: close on nav link click
        document.querySelectorAll("#navOverlay a").forEach(link => {
          link.addEventListener("click", () => {
            navOverlay?.classList.add("hidden");
            freedomPanelMobile?.classList.add("hidden");
            freedomChevronMobile?.classList.remove("rotate-180");
            document.body.style.overflow = "";
          });
        });
      });
    </script>
  </body>
</html>






