<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{{ title or "modsuav" }}</title>
    <link href="/style.css" rel="stylesheet" />
  </head>

  <body class="min-h-screen flex flex-col bg-backdrop text-whisper font-sans antialiased">


    <!-- ✶ LOADER -->
    <div id="loader" class="fixed inset-0 z-50 bg-backdrop text-whisper flex flex-col items-center justify-center text-sm font-mono transition-opacity duration-1000 space-y-1 tracking-tight">
      <div class="text-suav animate-pulse">✶ <span id="dot-sequence">.</span></div>
      <div id="loader-message" class="opacity-70">initializing modsuav console</div>
    </div>




    {% include "nav.njk" %}


    <!-- ✶ Content from child templates -->
    {{ content | safe }}

    <!-- ✶ DESKTOP PANEL -->
    <div id="freedomPanelDesktop"
      class="fixed top-14 left-0 w-full h-[calc(100vh-3.5rem)] bg-[#0a0a0a] border-t border-neutral-800
             text-whisper font-mono text-sm z-50 overflow-y-auto
             opacity-0 pointer-events-none transform -translate-y-2
             transition-all duration-300 ease-out">

      <div class="w-full max-w-6xl mx-auto px-6 md:px-12 py-12 flex justify-between gap-12">
        <!-- LEFT -->
        <div class="space-y-3 max-w-xl flex-1">
          <h2 class="text-xl font-bold text-suav">SUAV Console Labs</h2>
          <p class="opacity-80 leading-snug">
            Soul-coded tools for artists and studios. No roadmap. Just resonance.
          </p>
          <p class="text-xs text-neutral-500">
            Everything here hums quietly until called.
          </p>
        </div>

        <!-- RIGHT -->
        <div class="space-y-2 w-48">
          <a href="/freebies" class="block hover:text-suav transition">Freebies ✶</a>

          <button id="branchesToggleDesktop" class="block w-full text-left hover:text-suav transition flex items-center gap-1">
            Branches
            <svg id="branchesChevronDesktop" class="w-3 h-3 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>

          <div id="branchesPanelDesktop" class="hidden ml-2 mt-2 border-l border-neutral-700 space-y-2 pl-4 text-sm">
            <a href="/branches/figma-tools" class="block hover:text-suav transition">Figma Tools</a>
            <a href="/branches/webflow-ghl" class="block hover:text-suav transition">Webflow → GHL</a>
            <a href="/branches/api-access" class="block hover:text-suav transition">API Access</a>
          </div>

          <a href="/docs" class="block hover:text-suav transition">Docs</a>
        </div>
      </div>
    </div>






    <!-- ✶ MOBILE NAV OVERLAY and footer/scripts assumed below -->

<!-- ✶ MOBILE NAV OVERLAY -->
<div id="navOverlay" class="hidden fixed inset-0 bg-[#0a0a0a] text-whisper z-50 px-6 py-8 space-y-6 text-lg overflow-y-auto md:hidden">
  <a href="/" class="block">Início</a>

  <button id="freedomToggleMobile" class="flex items-center gap-1 w-full text-left">
    Freedom34
    <svg id="freedomChevronMobile" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
    </svg>
  </button>
  <div id="freedomPanelMobile" class="hidden pl-4 border-l border-neutral-700 space-y-2 pt-2">
    <a href="/freebies" class="block text-base text-suav">✶ Freebies</a>
    <!-- 🌿 Mobile branches submenu -->
    <button id="branchesToggleMobile" class="flex items-center gap-1 w-full text-left">
      Branches
      <svg id="branchesChevronMobile" class="w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
      </svg>
    </button>
    <div id="branchesPanelMobile" class="hidden pl-4 border-l border-neutral-700 space-y-2 pt-2">
      <a href="/branches/figma-tools" class="block text-base">Figma Tools</a>
      <a href="/branches/webflow-ghl" class="block text-base">Webflow → GHL</a>
      <a href="/branches/api-access" class="block text-base">API Access</a>
    </div>
    <a href="/docs" class="block text-base">Docs</a>
  </div>

  <a href="/creative" class="block">Creative</a>
  <a href="/philosophy" class="block">Philosophy</a>
  <a href="/contact" class="block">Contact</a>
</div>



{% include "footer.njk" %}


    <!-- ✶ CONSOLE SCRIPT -->
    <script>
      // LOADER SEQUENCE
      const messages = [
        "initializing modsuav console",
        "linking to grove tree",
        "calibrating soul-interface",
        "establishing frequency sync",
        "syncing encrypted memory",
        "✶ ready"
      ];
      const bootSound = document.getElementById("boot-sound");
      bootSound?.play().catch(err => console.log("Autoplay blocked", err));
      let hasUserClicked = false;
      window.addEventListener("click", () => {
        if (hasUserClicked) return;
        hasUserClicked = true;
        bootSound?.play().catch(err => console.warn("Manual playback failed:", err));
        const clickMessage = document.getElementById("click-message");
        clickMessage?.classList.remove("opacity-0");
        clickMessage?.classList.add("opacity-100");
        setTimeout(() => {
          clickMessage?.classList.remove("opacity-100");
          clickMessage?.classList.add("opacity-0");
        }, 3500);
      }, { once: true });
      if (!sessionStorage.getItem("modsuavLoaded")) {
        sessionStorage.setItem("modsuavLoaded", "true");
        let messageIndex = 0;
        const loaderMessage = document.getElementById("loader-message");
        const dotSequence = document.getElementById("dot-sequence");
        const dots = [".", "..", "..."];
        let dotState = 0;
        const dotTimer = setInterval(() => {
          dotState = (dotState + 1) % dots.length;
          dotSequence.textContent = dots[dotState];
        }, 300);
        const messageDelay = 500;
        const messageTimer = setInterval(() => {
          messageIndex++;
          if (messageIndex >= messages.length) {
            clearInterval(messageTimer);
            clearInterval(dotTimer);
            return;
          }
          loaderMessage.textContent = messages[messageIndex];
        }, messageDelay);
        setTimeout(() => {
          const loader = document.getElementById("loader");
          loader?.classList.add("opacity-0");
          setTimeout(() => loader?.remove(), 600);
        }, messageDelay * (messages.length + 1));
      } else {
        document.getElementById("loader")?.remove();
      }
    </script>














<script>
  document.addEventListener("DOMContentLoaded", () => {
    // ✶ DESKTOP Freedom34 Panel
    const toggleBtn = document.getElementById("freedomToggleDesktop");
    const panel = document.getElementById("freedomPanelDesktop");
    const chevron = document.getElementById("freedomChevronDesktop");

    let isOpen = false;

    toggleBtn?.addEventListener("click", (e) => {
      e.stopPropagation();
      isOpen = !isOpen;
      panel.classList.toggle("opacity-0", !isOpen);
      panel.classList.toggle("pointer-events-none", !isOpen);
      panel.classList.toggle("-translate-y-2", !isOpen);
      panel.classList.toggle("translate-y-0", isOpen);
      chevron?.classList.toggle("rotate-180", isOpen);
    });

    document.addEventListener("click", (e) => {
      if (isOpen && !panel.contains(e.target) && !toggleBtn.contains(e.target)) {
        isOpen = false;
        panel.classList.add("opacity-0", "pointer-events-none", "-translate-y-2");
        panel.classList.remove("translate-y-0");
        chevron?.classList.remove("rotate-180");
      }
    });

    // ✶ DESKTOP Branches Submenu
    const branchesToggleDesktop = document.getElementById("branchesToggleDesktop");
    const branchesPanelDesktop = document.getElementById("branchesPanelDesktop");
    const branchesChevronDesktop = document.getElementById("branchesChevronDesktop");

    branchesToggleDesktop?.addEventListener("click", () => {
      const open = branchesPanelDesktop.classList.toggle("hidden");
      branchesChevronDesktop?.classList.toggle("rotate-180", open);
    });

    // 🍔 MOBILE Menu Toggle
    const menuToggle = document.getElementById("menuToggle");
    const navOverlay = document.getElementById("navOverlay");

    menuToggle?.addEventListener("click", () => {
      const open = navOverlay.classList.toggle("hidden");
      document.body.style.overflow = open ? "" : "hidden";
    });

    // 📁 MOBILE Freedom34 Flyout
    const freedomToggleMobile = document.getElementById("freedomToggleMobile");
    const freedomPanelMobile = document.getElementById("freedomPanelMobile");
    const freedomChevronMobile = document.getElementById("freedomChevronMobile");

    freedomToggleMobile?.addEventListener("click", () => {
      const open = freedomPanelMobile.classList.toggle("hidden");
      freedomChevronMobile?.classList.toggle("rotate-180", open);
    });

    // 🌿 MOBILE Branches Flyout
    const branchesToggleMobile = document.getElementById("branchesToggleMobile");
    const branchesPanelMobile = document.getElementById("branchesPanelMobile");
    const branchesChevronMobile = document.getElementById("branchesChevronMobile");

    branchesToggleMobile?.addEventListener("click", () => {
      const open = branchesPanelMobile.classList.toggle("hidden");
      branchesChevronMobile?.classList.toggle("rotate-180", open);
    });

    // 🧹 Close mobile menu on link click
    document.querySelectorAll("#navOverlay a").forEach(link => {
      link.addEventListener("click", () => {
        navOverlay?.classList.add("hidden");
        document.body.style.overflow = "";
        freedomPanelMobile?.classList.add("hidden");
        freedomChevronMobile?.classList.remove("rotate-180");
        branchesPanelMobile?.classList.add("hidden");
        branchesChevronMobile?.classList.remove("rotate-180");
      });
    });

    // ⎋ ESC closes everything
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape") {
        navOverlay?.classList.add("hidden");
        document.body.style.overflow = "";
        freedomPanelMobile?.classList.add("hidden");
        freedomChevronMobile?.classList.remove("rotate-180");
        branchesPanelMobile?.classList.add("hidden");
        branchesChevronMobile?.classList.remove("rotate-180");

        if (isOpen) {
          isOpen = false;
          panel.classList.add("opacity-0", "pointer-events-none", "-translate-y-2");
          panel.classList.remove("translate-y-0");
          chevron?.classList.remove("rotate-180");
        }
      }
    });
  });
</script>



  </body>
</html>






